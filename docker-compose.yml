services:
  db:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - ./src/database/seeds/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      data-scraper:
        aliases:
          - postgres

  app:
    image: data-scraper:dev
    restart: always
    container_name: data-scraper-app
    build:
      context: .
      dockerfile: Dockerfile
    command: pnpm run start:dev app
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium
    env_file:
      - ./.env
    ports:
      - "3050:3050" # This is the port your NestJS app will use
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - data-scraper

networks:
  data-scraper:
    driver: bridge
volumes:
  db_data: